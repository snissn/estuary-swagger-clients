/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.35).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import com.fasterxml.jackson.databind.ObjectMapper;
import io.micronaut.http.*;
import io.micronaut.http.annotation.*;
import io.reactivex.Single;
import io.swagger.v3.oas.annotations.*;
import io.swagger.v3.oas.annotations.responses.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.annotation.Nullable;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.MicronautCodegen", date = "2022-09-27T20:40:53.180766-10:00[Pacific/Honolulu]")
@Controller
public interface PublicApi {


    @Operation(summary = "Get Content by Cid", operationId = "publicByCidCidGet", description = "This endpoint returns the content associated with a CID" , tags = {"public"})
    @Get(value = "/public/by-cid/{cid}")
    default Single<HttpResponse<Void>> publicByCidCidGet(@Parameter(description = "Cid") @PathVariable("cid") String cid
) {
        return Single.fromCallable(() -> {
            throw new UnsupportedOperationException();
        });
    }


    @Operation(summary = "Get storage failures", operationId = "publicDealsFailuresGet", description = "This endpoint returns a list of storage failures" , tags = {"deals"})
    @Get(value = "/public/deals/failures")
    default Single<HttpResponse<Void>> publicDealsFailuresGet() {
        return Single.fromCallable(() -> {
            throw new UnsupportedOperationException();
        });
    }


    @Operation(summary = "Get public node info", operationId = "publicInfoGet", description = "This endpoint returns information about the node" , tags = {"public"})
    @Get(value = "/public/info")
    default Single<HttpResponse<Void>> publicInfoGet() {
        return Single.fromCallable(() -> {
            throw new UnsupportedOperationException();
        });
    }


    @Operation(summary = "Get deal metrics", operationId = "publicMetricsDealsOnChainGet", description = "This endpoint is used to get deal metrics" , tags = {"public", "metrics"})
    @Get(value = "/public/metrics/deals-on-chain")
    default Single<HttpResponse<Void>> publicMetricsDealsOnChainGet() {
        return Single.fromCallable(() -> {
            throw new UnsupportedOperationException();
        });
    }


    @Operation(summary = "Get all miners deals", operationId = "publicMinersDealsMinerGet", description = "This endpoint returns all miners deals" , tags = {"public", "miner"})
    @Get(value = "/public/miners/deals/{miner}")
    default Single<HttpResponse<Void>> publicMinersDealsMinerGet(@Parameter(description = "Filter by miner") @PathVariable("miner") String miner
) {
        return Single.fromCallable(() -> {
            throw new UnsupportedOperationException();
        });
    }


    @Operation(summary = "Get all miners", operationId = "publicMinersFailuresMinerGet", description = "This endpoint returns all miners" , tags = {"public", "net"})
    @Get(value = "/public/miners/failures/{miner}")
    default Single<HttpResponse<Void>> publicMinersFailuresMinerGet(@Parameter(description = "Filter by miner") @PathVariable("miner") String miner
) {
        return Single.fromCallable(() -> {
            throw new UnsupportedOperationException();
        });
    }


    @Operation(summary = "Get all miners", operationId = "publicMinersGet", description = "This endpoint returns all miners" , tags = {"public", "net"})
    @Get(value = "/public/miners")
    default Single<HttpResponse<Void>> publicMinersGet() {
        return Single.fromCallable(() -> {
            throw new UnsupportedOperationException();
        });
    }


    @Operation(summary = "Get miner stats", operationId = "publicMinersStatsMinerGet", description = "This endpoint returns miner stats" , tags = {"public", "miner"})
    @Get(value = "/public/miners/stats/{miner}")
    default Single<HttpResponse<Void>> publicMinersStatsMinerGet(@Parameter(description = "Filter by miner") @PathVariable("miner") String miner
) {
        return Single.fromCallable(() -> {
            throw new UnsupportedOperationException();
        });
    }


    @Operation(summary = "Query Ask", operationId = "publicMinersStorageQueryMinerGet", description = "This endpoint returns the ask for a given CID" , tags = {"deals"})
    @Get(value = "/public/miners/storage/query/{miner}")
    default Single<HttpResponse<Void>> publicMinersStorageQueryMinerGet(@Parameter(description = "CID") @PathVariable("miner") String miner
) {
        return Single.fromCallable(() -> {
            throw new UnsupportedOperationException();
        });
    }


    @Operation(summary = "Net Addrs", operationId = "publicNetAddrsGet", description = "This endpoint is used to get net addrs" , tags = {"public", "net"})
    @ApiResponse(responseCode = "200", description = "OK")
    @Get(value = "/public/net/addrs", produces = { "application/json" })
    default Single<HttpResponse<List<String>>> publicNetAddrsGet() {
        return Single.fromCallable(() -> {
            throw new UnsupportedOperationException();
        });
    }


    @Operation(summary = "Net Peers", operationId = "publicNetPeersGet", description = "This endpoint is used to get net peers" , tags = {"public", "net"})
    @ApiResponse(responseCode = "200", description = "OK")
    @Get(value = "/public/net/peers", produces = { "application/json" })
    default Single<HttpResponse<List<String>>> publicNetPeersGet() {
        return Single.fromCallable(() -> {
            throw new UnsupportedOperationException();
        });
    }


    @Operation(summary = "Public stats", operationId = "publicStatsGet", description = "This endpoint is used to get public stats." , tags = {"public"})
    @Get(value = "/public/stats")
    default Single<HttpResponse<Void>> publicStatsGet() {
        return Single.fromCallable(() -> {
            throw new UnsupportedOperationException();
        });
    }

}
